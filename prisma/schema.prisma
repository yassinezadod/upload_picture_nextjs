// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model File {
  id            Int    @id @default(autoincrement())
  nom           String
  prenom        String
  birthDate     DateTime
  genre         String
  classId       Int
  inscription   String
  telephone     String
  ecoleOrigine  String
  picture       String? // Champ pour stocker l'URL de l'image
  
  // Relation avec la classe
  class         Class   @relation(fields: [classId], references: [id])
   payments      Payment[]
}

model Class {
  id        Int       @id @default(autoincrement())
  niveau    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relation inverse avec File
  files     File[]    // Une classe peut avoir plusieurs fichiers (étudiants)
}

model Payment {
  id          Int           @id @default(autoincrement())
  fileId      Int
  amount      Float
  paymentDate DateTime
  period      PaymentPeriod // Enum pour définir le mois ou la période du paiement
  status      PaymentStatus
  reference   String        @unique // Référence unique pour chaque paiement
  
  // Relations
  file        File          @relation(fields: [fileId], references: [id])
}

enum PaymentStatus {
  PAID       // Payé
  UNPAID     // Non payé
  PENDING    // En attente
}

enum PaymentPeriod {
  JANUARY
  FEBRUARY
  MARCH
  APRIL
  MAY
  JUNE
  JULY
  AUGUST
  SEPTEMBER
  OCTOBER
  NOVEMBER
  DECEMBER
}

